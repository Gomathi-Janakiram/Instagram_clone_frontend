[{"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\index.js":"1","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\App.js":"2","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\Navbar.js":"3","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Home.js":"4","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Profile.js":"5","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Signup.js":"6","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Signin.js":"7","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\CreatePost.js":"8","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\Reducers\\UserReducer.js":"9","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\UserProfile.js":"10","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\SubscribedUserposts.js":"11","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\index.js":"12","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\App.js":"13","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\Navbar.js":"14","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Profile.js":"15","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Home.js":"16","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Signin.js":"17","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\Reducers\\UserReducer.js":"18","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Signup.js":"19","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\CreatePost.js":"20","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\UserProfile.js":"21","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\SubscribedUserposts.js":"22"},{"size":156,"mtime":1609901639225,"results":"23","hashOfConfig":"24"},{"size":1894,"mtime":1610124511260,"results":"25","hashOfConfig":"24"},{"size":1450,"mtime":1610124178883,"results":"26","hashOfConfig":"24"},{"size":5910,"mtime":1610124948930,"results":"27","hashOfConfig":"24"},{"size":1830,"mtime":1610122606341,"results":"28","hashOfConfig":"24"},{"size":2181,"mtime":1609939513337,"results":"29","hashOfConfig":"24"},{"size":2622,"mtime":1609991981744,"results":"30","hashOfConfig":"24"},{"size":3256,"mtime":1610016275502,"results":"31","hashOfConfig":"24"},{"size":414,"mtime":1610114898273,"results":"32","hashOfConfig":"24"},{"size":4692,"mtime":1610122732863,"results":"33","hashOfConfig":"24"},{"size":5917,"mtime":1610124936781,"results":"34","hashOfConfig":"24"},{"size":156,"mtime":1609901639225,"results":"35","hashOfConfig":"36"},{"size":1943,"mtime":1610297801243,"results":"37","hashOfConfig":"36"},{"size":1450,"mtime":1610124178883,"results":"38","hashOfConfig":"36"},{"size":1947,"mtime":1610297738298,"results":"39","hashOfConfig":"36"},{"size":6116,"mtime":1610297718652,"results":"40","hashOfConfig":"36"},{"size":2685,"mtime":1610297748403,"results":"41","hashOfConfig":"36"},{"size":414,"mtime":1610114898273,"results":"42","hashOfConfig":"36"},{"size":2204,"mtime":1610297757408,"results":"43","hashOfConfig":"36"},{"size":3315,"mtime":1610297667808,"results":"44","hashOfConfig":"36"},{"size":4860,"mtime":1610297784435,"results":"45","hashOfConfig":"36"},{"size":6123,"mtime":1610297773144,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"e6s6d2",{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"150wjjt",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\index.js",[],["99","100"],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\App.js",["101","102","103"],"import React, { useEffect, createContext, useReducer,useContext } from \"react\"\nimport { BrowserRouter, Route, Switch, useHistory, useParams } from \"react-router-dom\"\nimport NavBar from \"./components/Navbar\"\nimport \"./App.css\"\nimport Home from \"./components/screens/Home\"\nimport Profile from \"./components/screens/Profile\"\nimport Signin from \"./components/screens/Signin\"\nimport Signup from \"./components/screens/Signup\"\nimport CreatePost from \"./components/screens/CreatePost\"\nimport { Reducer, initialState } from \"./Reducers/UserReducer\"\nimport UserProfile from \"./components/screens/UserProfile\"\nimport SubscribedUserposts from \"./components/screens/SubscribedUserposts\"\n\nexport const userContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state,dispatch}=useContext(userContext)\n  useEffect(()=>{\n      const user=JSON.parse(localStorage.getItem(\"user\"))\n      if(user){\n        dispatch({type:\"USER\",payload:user})\n      }else{\n        history.push(\"/signin\")\n      }\n  },[])\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/create\">\n        <CreatePost />\n      </Route>\n      <Route exact path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route exact path=\"/myfollowingspost\" >\n        <SubscribedUserposts/>\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(Reducer, initialState)\n  return (\n    <>\n      <userContext.Provider value={{state,dispatch}}>\n        <BrowserRouter>\n          <NavBar />\n          <Routing />\n        </BrowserRouter>\n      </userContext.Provider>\n\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\Navbar.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Home.js",["104","105","106","107"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport { userContext } from \"../../App\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(userContext)\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/allpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n                console.log(data)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch(\"http://localhost:5000/like\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                // setData(result)      this can also be implemented \r\n                console.log(data)\r\n                console.log(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const UnlikePost = (id) => {\r\n        fetch(\"http://localhost:5000/unlike\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        console.log(item)\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                console.log(data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch(\"http://localhost:5000/comment\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                text: text,\r\n                postId: postId\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                console.log(data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletepost = (postId) => {\r\n        fetch(`http://localhost:5000/deletepost/${postId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData=data.filter(item=>{\r\n                    return item._id!==result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {data.map(item => (\r\n                <div className=\"card home-card\" key={item._id} >\r\n                    <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id!==state._id ?\"/profile/\"+item.postedBy._id:\"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id==state._id && \r\n                    <i className=\"material-icons\" style={{ float:\"right\" }}\r\n                    onClick={()=>deletepost(item._id)}>delete</i>}\r\n                       \r\n                    </h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                        {item.likes.includes(state._id)\r\n                            ? <i className=\"material-icons\" onClick={() => { UnlikePost(item._id) }}>thumb_down</i> :\r\n                            <i className=\"material-icons\" onClick={() => { likePost(item._id) }}>thumb_up</i>\r\n                        }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {item.comments.map(comment => (\r\n                            <h6 key={comment._id}><span style={{ fontWeight: \"500\" }}>{comment.postedBy.name}   </span>{comment.text}</h6>\r\n                        ))}\r\n                        <form onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            makeComment(e.target[0].value, item._id)\r\n                        }}>\r\n                            <input type=\"text\" placeholder=\"Add comment\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Profile.js",["108","109","110"],"import React,{useState,useEffect,useContext} from \"react\"\r\nimport {userContext} from \"../../App\"\r\n\r\nconst Profile=()=>{\r\n    const [mypics,setMypics]=useState([])\r\n    const {state,dispatch}=useContext(userContext)\r\n    useEffect(()=>{\r\n        fetch(\"http://localhost:5000/mypost\",{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setMypics(result.mypost)\r\n        })\r\n    },[])\r\n    return(\r\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n            <div style={{display:\"flex\",justifyContent:\"space-around\",margin:\"18px 0px\",borderBottom:\"1px solid grey\"}}>\r\n                <div>\r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                        src=\"https://images.unsplash.com/photo-1469259943454-aa100abba749?ixid=MXwxMjA3fDB8MHxzZWFyY2h8N3x8Zmxvd2Vyc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading\"}</h4>\r\n                    <h5>{state?state.email:\"loading\"}</h5>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\", width:\"108%\"}}>\r\n                        <h6>{mypics.length} posts</h6>\r\n                        <h6>{state?state.followers.length:0} followers</h6>\r\n                        <h6>{state?state.following.length:0} following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {mypics.map(item=>(\r\n                    <img key={item._id}className=\"item\" src={item.photo}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Signup.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\Signin.js",["111"],"import React, { useState ,useContext} from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\nimport {userContext} from \"../../App\"\r\n\r\nconst Signin = () => {\r\n    const {state,dispatch}=useContext(userContext)\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid Email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"http://localhost:5000/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        }).then(res =>res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    // as soon as the user is logged in we send a token to him and the token along with the user details is stored in local storage\r\n                    localStorage.setItem(\"jwt\",data.token)\r\n                    localStorage.setItem(\"user\",JSON.stringify(data.user))  //bcoz localstorage will save only in string\r\n                    dispatch({type:\"USER\",payload:data.user})\r\n                    M.toast({ html: \"SignedIn successfull\", classes: \"#00e676 green accent-3\" })\r\n                    history.push(\"/\")\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Log In</h2>\r\n                <input type=\"email\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <button className=\"btn waves-effect waves-light $64b5f6 blue darken-1\" onClick={PostData}>Login</button>\r\n                <span className=\"subtitleHolder\">\r\n                    <Link className=\"subtitle\" to=\"/signup\">Don't have an account?</Link>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\CreatePost.js",["112"],"import React, { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport M from \"materialize-css\"\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n    const PostDetails = () => {\r\n        const data = new FormData()   //if we have to post a file,we have to do this\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"insta-clone\")  //insta-clone is the name we gave in cloudinary\r\n        data.append(\"cloud_name\", \"cloudinary-imaginary\")        //cloud name\r\n        fetch(\"https://api.cloudinary.com/v1_1/cloudinary-imaginary/image/upload\", {   //base url specified in cloudinary\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUrl(data.url)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            postBackend()\r\n        }\r\n    }, [url])\r\n\r\n    const postBackend = () => {\r\n        fetch(\"http://localhost:5000/createpost\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\") //when the user is signed in his jwt token is stored in localstorage and we it here to allow him inside the protected resource\r\n            },\r\n            body: JSON.stringify({\r\n                title: title,\r\n                body: body,\r\n                pic: url\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                } else {\r\n                    M.toast({ html: \"Created post\", classes: \"#00e676 green accent-3\" })\r\n                    history.push(\"/\")\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card input-field\"\r\n            style={{ margin: \"30px auto\", maxWidth: \"500px\", padding: \"20px\", textAlign: \"center\" }}>\r\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={(e) => setBody(e.target.value)} />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn  #64b5f6 blue darken-1\">\r\n                    <span>UPLOAD IMAGE</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={PostDetails}>Submit Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\Reducers\\UserReducer.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\UserProfile.js",["113","114","115","116","117"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport { userContext } from \"../../App\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst Profile = () => {\r\n    const [userprofile, setuserprofile] = useState(null)\r\n    const [showFollow,setShowFollow]=useState(true)\r\n    const { state, dispatch } = useContext(userContext)\r\n    const { userid } = useParams()\r\n    console.log(userid)\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setuserprofile(result)\r\n            })\r\n    }, [])\r\n\r\n    const FollowUser=()=>{\r\n        fetch(\"http://localhost:5000/follow\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            setShowFollow(false)\r\n            console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setuserprofile(prevState=>{\r\n                return{\r\n                    ...prevState,\r\n                    user:{...prevState.user,followers:[...prevState.user.followers,data._id]}\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const unFollowUser=()=>{\r\n        fetch(\"http://localhost:5000/unfollow\",{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setuserprofile(prevState=>{\r\n                const newFollower=prevState.user.followers.filter(item=>item!=data._id)\r\n                return{\r\n                    ...prevState,\r\n                    user:{...prevState.user,followers:newFollower}\r\n                }\r\n            })\r\n            setShowFollow(true)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {userprofile ?\r\n                <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-around\", margin: \"18px 0px\", borderBottom: \"1px solid grey\" }}>\r\n                        <div>\r\n                            <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                                src=\"https://images.unsplash.com/photo-1469259943454-aa100abba749?ixid=MXwxMjA3fDB8MHxzZWFyY2h8N3x8Zmxvd2Vyc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <h4>{userprofile.user.name}</h4>\r\n                            <h4>{userprofile.user.email}</h4>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                                <h6>{userprofile.posts.length} posts</h6>\r\n                                <h6>{userprofile.user.followers.length} followers</h6>\r\n                                <h6>{userprofile.user.following.length} following</h6>\r\n                            </div>\r\n                            {showFollow?<button style={{margin:\"10px\"}}\r\n                            className=\"btn waves-effect waves-light $64b5f6 blue darken-1\" onClick={FollowUser}>Follow</button>:\r\n                            <button style={{margin:\"10px\"}}\r\n                            className=\"btn waves-effect waves-light $64b5f6 blue darken-1\" onClick={unFollowUser}>Un Follow</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gallery\">\r\n                        {userprofile.posts.map(item => (\r\n                            <img key={item._id} className=\"item\" src={item.photo} />\r\n                        ))}\r\n                    </div>\r\n                </div> :<h4>loading.........!</h4>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","C:\\Users\\HP\\Documents\\gomzzzzzzz\\instagram_frontend\\src\\components\\screens\\SubscribedUserposts.js",["118","119","120","121"],"import React, { useState, useEffect, useContext } from \"react\"\r\nimport { userContext } from \"../../App\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(userContext)\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/getsubpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n                console.log(data)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch(\"http://localhost:5000/like\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                // setData(result)      this can also be implemented \r\n                console.log(data)\r\n                console.log(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const UnlikePost = (id) => {\r\n        fetch(\"http://localhost:5000/unlike\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        console.log(item)\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                console.log(data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch(\"http://localhost:5000/comment\", {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                text: text,\r\n                postId: postId\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n                console.log(data)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletepost = (postId) => {\r\n        fetch(`http://localhost:5000/deletepost/${postId}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData=data.filter(item=>{\r\n                    return item._id!==result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            {data.map(item => (\r\n                <div className=\"card home-card\" key={item._id} >\r\n                    <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id!==state._id ?\"/profile/\"+item.postedBy._id:\"/profile\"}>{item.postedBy.name}</Link> {item.postedBy._id==state._id && \r\n                    <i className=\"material-icons\" style={{ float:\"right\" }}\r\n                    onClick={()=>deletepost(item._id)}>delete</i>}\r\n                       \r\n                    </h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                        {item.likes.includes(state._id)\r\n                            ? <i className=\"material-icons\" onClick={() => { UnlikePost(item._id) }}>thumb_down</i> :\r\n                            <i className=\"material-icons\" onClick={() => { likePost(item._id) }}>thumb_up</i>\r\n                        }\r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {item.comments.map(comment => (\r\n                            <h6 key={comment._id}><span style={{ fontWeight: \"500\" }}>{comment.postedBy.name}   </span>{comment.text}</h6>\r\n                        ))}\r\n                        <form onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            makeComment(e.target[0].value, item._id)\r\n                        }}>\r\n                            <input type=\"text\" placeholder=\"Add comment\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\index.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\App.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\Navbar.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Profile.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Home.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Signin.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\Reducers\\UserReducer.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\Signup.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\CreatePost.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\UserProfile.js",[],"C:\\Users\\HP\\Documents\\gomzzzzzzz\\Instagram_clone_frontend\\src\\components\\screens\\SubscribedUserposts.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":52,"nodeType":"128","messageId":"129","endLine":2,"endColumn":61},{"ruleId":"126","severity":1,"message":"130","line":18,"column":10,"nodeType":"128","messageId":"129","endLine":18,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":26,"column":5,"nodeType":"133","endLine":26,"endColumn":7,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"135","line":7,"column":20,"nodeType":"128","messageId":"129","endLine":7,"endColumn":28},{"ruleId":"131","severity":1,"message":"136","line":19,"column":8,"nodeType":"133","endLine":19,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":127,"column":178,"nodeType":"140","messageId":"141","endLine":127,"endColumn":180},{"ruleId":"142","severity":1,"message":"143","line":133,"column":25,"nodeType":"144","endLine":133,"endColumn":49},{"ruleId":"126","severity":1,"message":"135","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":26},{"ruleId":"142","severity":1,"message":"143","line":21,"column":21,"nodeType":"144","endLine":23,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":37,"column":21,"nodeType":"144","endLine":37,"endColumn":75},{"ruleId":"126","severity":1,"message":"130","line":7,"column":12,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"131","severity":1,"message":"145","line":34,"column":8,"nodeType":"133","endLine":34,"endColumn":13,"suggestions":"146"},{"ruleId":"126","severity":1,"message":"130","line":8,"column":13,"nodeType":"128","messageId":"129","endLine":8,"endColumn":18},{"ruleId":"131","severity":1,"message":"147","line":21,"column":8,"nodeType":"133","endLine":21,"endColumn":10,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":64,"column":77,"nodeType":"140","messageId":"141","endLine":64,"endColumn":79},{"ruleId":"142","severity":1,"message":"143","line":82,"column":29,"nodeType":"144","endLine":84,"endColumn":31},{"ruleId":"142","severity":1,"message":"143","line":103,"column":29,"nodeType":"144","endLine":103,"endColumn":85},{"ruleId":"126","severity":1,"message":"135","line":7,"column":20,"nodeType":"128","messageId":"129","endLine":7,"endColumn":28},{"ruleId":"131","severity":1,"message":"136","line":19,"column":8,"nodeType":"133","endLine":19,"endColumn":10,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"139","line":127,"column":178,"nodeType":"140","messageId":"141","endLine":127,"endColumn":180},{"ruleId":"142","severity":1,"message":"143","line":133,"column":25,"nodeType":"144","endLine":133,"endColumn":49},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["153"],"'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["154"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'postBackend'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["156"],"Expected '!==' and instead saw '!='.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"160","fix":"166"},"Update the dependencies array to be: [dispatch, history]",{"range":"167","text":"168"},"Update the dependencies array to be: [data]",{"range":"169","text":"170"},"Update the dependencies array to be: [postBackend, url]",{"range":"171","text":"172"},"Update the dependencies array to be: [userid]",{"range":"173","text":"174"},{"range":"175","text":"170"},[1017,1019],"[dispatch, history]",[619,621],"[data]",[1206,1211],"[postBackend, url]",[767,769],"[userid]",[622,624]]